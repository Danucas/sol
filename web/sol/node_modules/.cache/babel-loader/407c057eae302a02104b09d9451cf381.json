{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/sol/sol/src/App.js\";\nimport React, { useRef } from 'react';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as bodyPix from \"@tensorflow-models/body-pix\";\nimport Webcam from \"react-webcam\";\nimport './App.css';\nimport backVideo from './airport.mp4';\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const backVideoRef = useRef(null);\n\n  const runBodySegment = async () => {\n    const net = await bodyPix.load();\n    console.log(backVideoRef);\n\n    if (backVideoRef.current) {\n      backVideoRef.current.play();\n    } // backVideoRef.play();\n    // detect(net);\n\n\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\n  const backMask = function (image) {\n    const video = backVideoRef;\n    return image;\n  };\n\n  const detect = async net => {\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      const video = webcamRef.current.video;\n      const videoHeight = video.videoHeight;\n      const videoWidth = video.videoWidth;\n      webcamRef.current.video.height = videoHeight;\n      webcamRef.current.video.width = videoWidth;\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n      const outStride = 16;\n      const segThreshold = 0.5;\n      const person = await net.segmentPersonParts(video, outStride, segThreshold);\n      console.log(person);\n      const coloredPart = bodyPix.toColoredPartMask(person);\n      const back = backMask(coloredPart);\n      console.log(back);\n      bodyPix.drawMask(canvasRef.current, video, back, 0.7, 0, false);\n    }\n  };\n\n  runBodySegment();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Webcam, {\n    ref: webcamRef,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zIndex: 9,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zIndex: 9,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    ref: backVideoRef,\n    style: {\n      position: \"absolute\",\n      // marginTop:0,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      // top:0,\n      opacity: 0.3,\n      right: 0,\n      textAlign: \"center\",\n      zIndex: 12,\n      width: 640,\n      height: 480,\n      objectFit: \"cover\"\n    },\n    width: \"640\",\n    height: \"480\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: backVideo,\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dan/Documents/sol/sol/src/App.js"],"names":["React","useRef","tf","bodyPix","Webcam","backVideo","App","webcamRef","canvasRef","backVideoRef","runBodySegment","net","load","console","log","current","play","setInterval","detect","backMask","image","video","readyState","videoHeight","videoWidth","height","width","outStride","segThreshold","person","segmentPersonParts","coloredPart","toColoredPartMask","back","drawMask","position","marginLeft","marginRight","left","right","textAlign","zIndex","opacity","objectFit"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as bodyPix from \"@tensorflow-models/body-pix\";\nimport Webcam from \"react-webcam\";\nimport './App.css';\nimport backVideo from './airport.mp4';\n\nfunction App() {\n\tconst webcamRef = useRef(null);\n\tconst canvasRef = useRef(null);\n\tconst backVideoRef = useRef(null);\n\n\tconst runBodySegment = async () => {\n\t\tconst net = await bodyPix.load();\n\t\tconsole.log(backVideoRef);\n\t\tif (backVideoRef.current) {\n\t\t\tbackVideoRef.current.play();\n\t\t}\n\t\t// backVideoRef.play();\n\t\t// detect(net);\n\t\tsetInterval(() => {\n\t\t\tdetect(net);\n\t\t}, 100);\n\t}\n\tconst backMask = function (image) {\n\t\tconst video = backVideoRef;\n\t\treturn image;\n\t}\n\n\tconst detect = async (net) => {\n\t\tif (\n\t\t\ttypeof webcamRef.current !== \"undefined\" &&\n\t\t\twebcamRef.current !== null &&\n\t\t\twebcamRef.current.video.readyState === 4\n\t\t\t) {\n\t\t\t\tconst video = webcamRef.current.video;\n\t\t\t\tconst videoHeight = video.videoHeight;\n\t\t\t\tconst videoWidth = video.videoWidth;\n\n\t\t\t\twebcamRef.current.video.height = videoHeight;\n\t\t\t\twebcamRef.current.video.width = videoWidth;\n\n\t\t\t\tcanvasRef.current.width = videoWidth;\n\t\t\t\tcanvasRef.current.height = videoHeight;\n\n\t\t\t\tconst outStride = 16;\n\t\t\t\tconst segThreshold = 0.5;\n\t\t\t\tconst person = await net.segmentPersonParts(video, outStride, segThreshold);\n\t\t\t\tconsole.log(person);\n\n\t\t\t\tconst coloredPart = bodyPix.toColoredPartMask(person);\n\t\t\t\tconst back = backMask(coloredPart);\n\t\t\t\tconsole.log(back);\n\t\t\t\tbodyPix.drawMask(\n\t\t\t\t\tcanvasRef.current,\n\t\t\t\t\tvideo,\n\t\t\t\t\tback,\n\t\t\t\t\t0.7,\n\t\t\t\t\t0,\n\t\t\t\t\tfalse\n\t\t\t\t)\n\t\t\t}\n\t}\n\n\trunBodySegment();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\t   <Webcam ref={webcamRef}\n\t\t\tstyle = {{\n\t\t\t\tposition:\"absolute\",\n\t\t\t\tmarginLeft:\"auto\",\n\t\t\t\tmarginRight:\"auto\",\n\t\t\t\tleft:0,\n\t\t\t\tright:0,\n\t\t\t\ttextAlign:\"center\",\n\t\t\t\tzIndex:9,\n\t\t\t\twidth:640,\n\t\t\t\theight:480\n\t\t\t}} />\n\t\t<canvas ref={canvasRef}\n\t\t\tstyle = {{\n\t\t\t\tposition:\"absolute\",\n\t\t\t\tmarginLeft:\"auto\",\n\t\t\t\tmarginRight:\"auto\",\n\t\t\t\tleft:0,\n\t\t\t\tright:0,\n\t\t\t\ttextAlign:\"center\",\n\t\t\t\tzIndex:9,\n\t\t\t\twidth:640,\n\t\t\t\theight:480\n\t\t\t}} />\n\t\t<video \n\t\t\tref={ backVideoRef }\n\t\t\tstyle = {{\n\t\t\t\tposition:\"absolute\",\n\t\t\t\t// marginTop:0,\n\t\t\t\tmarginLeft:\"auto\",\n\t\t\t\tmarginRight:\"auto\",\n\t\t\t\tleft:0,\n\t\t\t\t// top:0,\n\t\t\t\topacity:0.3,\n\t\t\t\tright:0,\n\t\t\t\ttextAlign:\"center\",\n\t\t\t\tzIndex:12,\n\t\t\t\twidth:640,\n\t\t\t\theight:480,\n\t\t\t\tobjectFit:\"cover\"\n\t\t\t}}\n\t\t\twidth=\"640\"\n\t\t\theight=\"480\">\n\t\t\t<source src={ backVideo } type=\"video/mp4\"/>\n\t\t</video>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}