{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/sol/sol/src/App.js\";\nimport React, { useRef } from 'react';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as bodyPix from \"@tensorflow-models/body-pix\";\nimport Webcam from \"react-webcam\";\nimport './App.css';\nimport backVideo from './airport.mp4';\n\nclass VideoFrame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.webcamRef = useRef(null);\n    this.canvasRef = useRef(null);\n    this.backVideoRef = useRef(null);\n  }\n\n  async runBodySegment() {\n    const component = this;\n    const net = await bodyPix.load(); // console.log(backVideoRef);\n\n    if (this.backVideoRef.current) {\n      this.backVideoRef.current.play();\n    } // backVideoRef.play();\n    // detect(net);\n\n\n    setInterval(() => {\n      component.detect(net);\n    }, 42);\n  }\n\n  backMask(image, mask) {\n    // console.log(image, mask);\n    for (let i = 0; i < image.data.length; i += 4) {\n      const vector = [mask.data[i], mask.data[i + 1], mask.data[i + 2], mask.data[i + 3]];\n\n      if (vector[0] === 255 && vector[1] === 255 && vector[2] === 255) {\n        image.data[i] = 0;\n        image.data[i + 1] = 0;\n        image.data[i + 2] = 0;\n        image.data[i + 3] = 0;\n      }\n    }\n\n    return image;\n  }\n\n  async detect(net) {\n    if (typeof this.webcamRef.current !== \"undefined\" && this.webcamRef.current !== null && this.webcamRef.current.video.readyState === 4) {\n      const video = this.webcamRef.current.video;\n      const videoHeight = video.videoHeight;\n      const videoWidth = video.videoWidth;\n      this.webcamRef.current.video.height = videoHeight;\n      this.webcamRef.current.video.width = videoWidth;\n      this.canvasRef.current.width = videoWidth;\n      this.canvasRef.current.height = videoHeight;\n      const outStride = 16;\n      const segThreshold = 0.5;\n      const cv = document.createElement('canvas');\n      cv.width = 640;\n      cv.height = 480;\n      const ctx = cv.getContext('2d');\n      ctx.drawImage(video, 0, 0, cv.width, cv.height);\n      const imageData = ctx.getImageData(0, 0, cv.width, cv.height);\n      console.log();\n      const person = await net.segmentPersonParts(video, outStride, segThreshold);\n      console.log(person);\n      const coloredPart = bodyPix.toColoredPartMask(person);\n      const back = backMask(imageData, coloredPart);\n      console.log(back);\n      const ctx2 = this.canvasRef.current.getContext('2d');\n      console.log(ctx2);\n      ctx2.putImageData(back, 0, 0);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Webcam, {\n      ref: this.webcamRef,\n      style: {\n        visibility: \"hidden\",\n        position: \"absolute\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        textAlign: \"center\",\n        zIndex: 9,\n        width: 640,\n        height: 480\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasRef,\n      style: {\n        position: \"absolute\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        textAlign: \"center\",\n        zIndex: 9,\n        width: 640,\n        height: 480,\n        backgroundColor: \"transparent\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.backVideoRef,\n      style: {\n        position: \"absolute\",\n        // marginTop:0,\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        // top:0,\n        // opacity:0.3,\n        right: 0,\n        textAlign: \"center\",\n        zIndex: 8,\n        width: 640,\n        height: 480,\n        objectFit: \"cover\"\n      },\n      width: \"640\",\n      height: \"480\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"source\", {\n      src: backVideo,\n      type: \"video/mp4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.runBodySegment();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 6\n      }\n    }, \"start\")));\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(VideoFrame, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dan/Documents/sol/sol/src/App.js"],"names":["React","useRef","tf","bodyPix","Webcam","backVideo","VideoFrame","Component","constructor","props","webcamRef","canvasRef","backVideoRef","runBodySegment","component","net","load","current","play","setInterval","detect","backMask","image","mask","i","data","length","vector","video","readyState","videoHeight","videoWidth","height","width","outStride","segThreshold","cv","document","createElement","ctx","getContext","drawImage","imageData","getImageData","console","log","person","segmentPersonParts","coloredPart","toColoredPartMask","back","ctx2","putImageData","render","visibility","position","marginLeft","marginRight","left","right","textAlign","zIndex","backgroundColor","objectFit","App"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as bodyPix from \"@tensorflow-models/body-pix\";\nimport Webcam from \"react-webcam\";\nimport './App.css';\nimport backVideo from './airport.mp4';\n\nclass VideoFrame extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.props = props;\n\t\tthis.webcamRef = useRef(null);\n\t\tthis.canvasRef = useRef(null);\n\t\tthis.backVideoRef = useRef(null);\n\t}\n\tasync runBodySegment () {\n\t\tconst component = this;\n\t\tconst net = await bodyPix.load();\n\t\t// console.log(backVideoRef);\n\t\tif (this.backVideoRef.current) {\n\t\t\tthis.backVideoRef.current.play();\n\t\t}\n\t\t// backVideoRef.play();\n\t\t// detect(net);\n\t\tsetInterval(() => {\n\t\t\tcomponent.detect(net);\n\t\t}, 42);\n\t}\n\tbackMask(image, mask) {\n\t\t// console.log(image, mask);\n\t\tfor (let i = 0; i < image.data.length; i+=4) {\n\t\t\tconst vector = [\n\t\t\t\tmask.data[i],\n\t\t\t\tmask.data[i + 1],\n\t\t\t\tmask.data[i + 2],\n\t\t\t\tmask.data[i + 3],\n\t\t\t]\n\t\t\tif (\n\t\t\t\tvector[0] === 255 &&\n\t\t\t\tvector[1] === 255 &&\n\t\t\t\tvector[2] === 255\n\t\t\t\t) {\n\t\t\t\t\timage.data[i] = 0;\n\t\t\t\t\timage.data[i + 1] = 0;\n\t\t\t\t\timage.data[i + 2] = 0;\n\t\t\t\t\timage.data[i + 3] = 0;\n\t\t\t}\n\t\t}\n\t\treturn image;\n\t}\n\n\tasync detect (net) {\n\t\tif (\n\t\t\ttypeof this.webcamRef.current !== \"undefined\" &&\n\t\t\tthis.webcamRef.current !== null &&\n\t\t\tthis.webcamRef.current.video.readyState === 4\n\t\t\t) {\n\t\t\t\tconst video = this.webcamRef.current.video;\n\t\t\t\tconst videoHeight = video.videoHeight;\n\t\t\t\tconst videoWidth = video.videoWidth;\n\n\t\t\t\tthis.webcamRef.current.video.height = videoHeight;\n\t\t\t\tthis.webcamRef.current.video.width = videoWidth;\n\n\t\t\t\tthis.canvasRef.current.width = videoWidth;\n\t\t\t\tthis.canvasRef.current.height = videoHeight;\n\n\t\t\t\tconst outStride = 16;\n\t\t\t\tconst segThreshold = 0.5;\n\t\t\t\tconst cv = document.createElement('canvas');\n\t\t\t\tcv.width = 640;\n\t\t\t\tcv.height = 480;\n\t\t\t\tconst ctx = cv.getContext('2d');\n\t\t\t\tctx.drawImage(video, 0, 0, cv.width, cv.height);\n\t\t\t\tconst imageData = ctx.getImageData(0, 0, cv.width, cv.height);\n\t\t\t\tconsole.log();\n\t\t\t\tconst person = await net.segmentPersonParts(video, outStride, segThreshold);\n\t\t\t\tconsole.log(person);\n\n\t\t\t\tconst coloredPart = bodyPix.toColoredPartMask(person);\n\t\t\t\tconst back = backMask(imageData, coloredPart);\n\t\t\t\tconsole.log(back);\n\t\t\t\tconst ctx2 = this.canvasRef.current.getContext('2d');\n\t\t\t\tconsole.log(ctx2);\n\t\t\t\tctx2.putImageData(back, 0, 0);\n\t\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t<Webcam ref={this.webcamRef}\n\t\t\t\t\tstyle = {{\n\t\t\t\t\t\tvisibility: \"hidden\",\n\t\t\t\t\t\tposition:\"absolute\",\n\t\t\t\t\t\tmarginLeft:\"auto\",\n\t\t\t\t\t\tmarginRight:\"auto\",\n\t\t\t\t\t\tleft:0,\n\t\t\t\t\t\tright:0,\n\t\t\t\t\t\ttextAlign:\"center\",\n\t\t\t\t\t\tzIndex:9,\n\t\t\t\t\t\twidth:640,\n\t\t\t\t\t\theight:480\n\t\t\t\t\t}} />\n\t\t\t\t<canvas ref={this.canvasRef}\n\t\t\t\t\tstyle = {{\n\t\t\t\t\t\tposition:\"absolute\",\n\t\t\t\t\t\tmarginLeft:\"auto\",\n\t\t\t\t\t\tmarginRight:\"auto\",\n\t\t\t\t\t\tleft:0,\n\t\t\t\t\t\tright:0,\n\t\t\t\t\t\ttextAlign:\"center\",\n\t\t\t\t\t\tzIndex:9,\n\t\t\t\t\t\twidth:640,\n\t\t\t\t\t\theight:480,\n\t\t\t\t\t\tbackgroundColor: \"transparent\"\n\t\t\t\t\t}} />\n\t\t\t\t<video \n\t\t\t\t\tref={ this.backVideoRef }\n\t\t\t\t\tstyle = {{\n\t\t\t\t\t\tposition:\"absolute\",\n\t\t\t\t\t\t// marginTop:0,\n\t\t\t\t\t\tmarginLeft:\"auto\",\n\t\t\t\t\t\tmarginRight:\"auto\",\n\t\t\t\t\t\tleft:0,\n\t\t\t\t\t\t// top:0,\n\t\t\t\t\t\t// opacity:0.3,\n\t\t\t\t\t\tright:0,\n\t\t\t\t\t\ttextAlign:\"center\",\n\t\t\t\t\t\tzIndex:8,\n\t\t\t\t\t\twidth:640,\n\t\t\t\t\t\theight:480,\n\t\t\t\t\t\tobjectFit:\"cover\"\n\t\t\t\t\t}}\n\t\t\t\t\twidth=\"640\"\n\t\t\t\t\theight=\"480\">\n\t\t\t\t\t<source src={ backVideo } type=\"video/mp4\"/>\n\t\t\t\t</video>\n\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t<button onClick={()=> {this.runBodySegment()} }>start</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction App() {\n  return (\n    <VideoFrame>\n\n\t</VideoFrame>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}