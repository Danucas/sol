{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/sol/sol/src/App.js\";\nimport React, { useRef } from 'react';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as bodyPix from \"@tensorflow-models/body-pix\";\nimport Webcam from \"react-webcam\";\nimport './App.css';\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const backVideoRef = useRef(null);\n\n  const runBodySegment = async () => {\n    const net = await bodyPix.load();\n    detect(net); // setInterval(() => {\n    // \tdetect(net);\n    // }, 100);\n  };\n\n  const backMask = function (image) {\n    const video = backVideoRef;\n    return image;\n  };\n\n  const detect = async net => {\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      const video = webcamRef.current.video;\n      const videoHeight = video.videoHeight;\n      const videoWidth = video.videoWidth;\n      webcamRef.current.video.height = videoHeight;\n      webcamRef.current.video.width = videoWidth;\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n      const outStride = 16;\n      const segThreshold = 0.5;\n      const person = await net.segmentPersonParts(video, outStride, segThreshold);\n      console.log(person);\n      const coloredPart = bodyPix.toColoredPartMask(person);\n      const back = backMask(coloredPart);\n      console.log(back);\n      bodyPix.drawMask(canvasRef.current, video, back, 0.7, 0, false);\n    }\n  };\n\n  runBodySegment();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Webcam, {\n    ref: webcamRef,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zIndex: 9,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zIndex: 9,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    src: \"./world.mov\",\n    style: {\n      position: \"absolute\",\n      marginLeft: 0,\n      marginRight: 0,\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zIndex: 12,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dan/Documents/sol/sol/src/App.js"],"names":["React","useRef","tf","bodyPix","Webcam","App","webcamRef","canvasRef","backVideoRef","runBodySegment","net","load","detect","backMask","image","video","current","readyState","videoHeight","videoWidth","height","width","outStride","segThreshold","person","segmentPersonParts","console","log","coloredPart","toColoredPartMask","back","drawMask","position","marginLeft","marginRight","left","right","textAlign","zIndex"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as bodyPix from \"@tensorflow-models/body-pix\";\nimport Webcam from \"react-webcam\";\nimport './App.css';\n\nfunction App() {\n\tconst webcamRef = useRef(null);\n\tconst canvasRef = useRef(null);\n\tconst backVideoRef = useRef(null);\n\n\tconst runBodySegment = async () => {\n\t\tconst net = await bodyPix.load();\n\t\tdetect(net);\n\t\t// setInterval(() => {\n\t\t// \tdetect(net);\n\t\t// }, 100);\n\t}\n\tconst backMask = function (image) {\n\t\tconst video = backVideoRef;\n\t\treturn image;\n\t}\n\n\tconst detect = async (net) => {\n\t\tif (\n\t\t\ttypeof webcamRef.current !== \"undefined\" &&\n\t\t\twebcamRef.current !== null &&\n\t\t\twebcamRef.current.video.readyState === 4\n\t\t\t) {\n\t\t\t\tconst video = webcamRef.current.video;\n\t\t\t\tconst videoHeight = video.videoHeight;\n\t\t\t\tconst videoWidth = video.videoWidth;\n\n\t\t\t\twebcamRef.current.video.height = videoHeight;\n\t\t\t\twebcamRef.current.video.width = videoWidth;\n\n\t\t\t\tcanvasRef.current.width = videoWidth;\n\t\t\t\tcanvasRef.current.height = videoHeight;\n\n\t\t\t\tconst outStride = 16;\n\t\t\t\tconst segThreshold = 0.5;\n\t\t\t\tconst person = await net.segmentPersonParts(video, outStride, segThreshold);\n\t\t\t\tconsole.log(person);\n\n\t\t\t\tconst coloredPart = bodyPix.toColoredPartMask(person);\n\t\t\t\tconst back = backMask(coloredPart);\n\t\t\t\tconsole.log(back);\n\t\t\t\tbodyPix.drawMask(\n\t\t\t\t\tcanvasRef.current,\n\t\t\t\t\tvideo,\n\t\t\t\t\tback,\n\t\t\t\t\t0.7,\n\t\t\t\t\t0,\n\t\t\t\t\tfalse\n\t\t\t\t)\n\t\t\t}\n\t}\n\n\trunBodySegment();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\t   <Webcam ref={webcamRef}\n\t\t\tstyle = {{\n\t\t\t\tposition:\"absolute\",\n\t\t\t\tmarginLeft:\"auto\",\n\t\t\t\tmarginRight:\"auto\",\n\t\t\t\tleft:0,\n\t\t\t\tright:0,\n\t\t\t\ttextAlign:\"center\",\n\t\t\t\tzIndex:9,\n\t\t\t\twidth:640,\n\t\t\t\theight:480\n\t\t\t}} />\n\t\t<canvas ref={canvasRef}\n\t\t\tstyle = {{\n\t\t\t\tposition:\"absolute\",\n\t\t\t\tmarginLeft:\"auto\",\n\t\t\t\tmarginRight:\"auto\",\n\t\t\t\tleft:0,\n\t\t\t\tright:0,\n\t\t\t\ttextAlign:\"center\",\n\t\t\t\tzIndex:9,\n\t\t\t\twidth:640,\n\t\t\t\theight:480\n\t\t\t}} />\n\t\t<video src=\"./world.mov\"\n\t\t\tstyle = {{\n\t\t\t\tposition:\"absolute\",\n\t\t\t\tmarginLeft:0,\n\t\t\t\tmarginRight:0,\n\t\t\t\tleft:0,\n\t\t\t\tright:0,\n\t\t\t\ttextAlign:\"center\",\n\t\t\t\tzIndex:12,\n\t\t\t\twidth:640,\n\t\t\t\theight:480\n\t\t\t}}>\n\t\t</video>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}