{"ast":null,"code":"var _jsxFileName = \"/home/dan/Documents/sol/sol/src/App.js\";\nimport React, { useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as bodyPix from \"@tensorflow-models/body-pix\";\nimport Webcam from \"react-webcam\";\nimport './App.css';\nimport menuStyles from './Menu.module.css';\nimport videoStyles from './VideoFrame.module.css';\nimport backVideo from './airport.mp4';\nconst root = document.getElementById('root');\n\nfunction VideoFrame() {\n  const loadingRef = useRef(null);\n  const triggerRef = useRef(null);\n  const galleryRef = useRef(null);\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const backVideoRef = useRef(null);\n  let render = false;\n  let recording = false;\n  let currentMask;\n  const dimensions = [window.innerWidth, window.innerHeight];\n  let cropedDimensions;\n  console.log(dimensions);\n  const videoConstraints = {\n    width: dimensions[0],\n    height: dimensions[1],\n    facingMode: \"user\"\n  }; // Navigation\n\n  const back = () => {\n    stop();\n    ReactDOM.render( /*#__PURE__*/React.createElement(MainView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }), root);\n  };\n  /**\n   * runBodySegment - startpoint for the background extraction\n   */\n\n\n  const runBodySegment = async () => {\n    loadingRef.current.style.visibility = 'visible';\n    render = true;\n    const net = await bodyPix.load();\n\n    if (backVideoRef.current) {\n      backVideoRef.current.play();\n    }\n\n    const interval = setInterval(() => {\n      if (render) {\n        loadingRef.current.style.visibility = 'hidden';\n        galleryRef.current.style.filter = 'opacity(1)';\n        detect(net);\n      } else {\n        clearInterval(interval);\n      }\n    }, 70);\n  };\n  /**\n   * backMask - utility to apply the mask and compose the image using the video background\n   * @param {ImageData} image \n   * @param {ImageData} mask \n   * @returns {ImageData} image - after the mask is applied\n   */\n\n\n  const backMask = (image, mask) => {\n    // console.log(image, mask, backVideoRef.current);\n    const cv = document.createElement('canvas');\n    let imageData;\n\n    try {\n      const videoW = backVideoRef.current.videoWidth;\n      const videoH = backVideoRef.current.videoHeight;\n      cv.style.width = image.height * (videoW / videoH);\n      cv.style.height = image.height;\n      cv.width = image.height * (videoW / videoH);\n      ;\n      cv.height = image.height;\n      const ctx = cv.getContext('2d');\n      ctx.drawImage(backVideoRef.current, 0, 0, cv.width, cv.height);\n      imageData = ctx.getImageData(0, 0, image.width, image.height);\n    } catch (err) {\n      console.log(err);\n      return null;\n    } // console.log(image, mask, imageData);\n\n\n    for (let i = 0; i < image.data.length; i += 4) {\n      const vector = [mask.data[i], mask.data[i + 1], mask.data[i + 2], mask.data[i + 3]];\n\n      if (vector[0] === 255 && vector[1] === 255 && vector[2] === 255) {\n        image.data[i] = imageData.data[i];\n        image.data[i + 1] = imageData.data[i + 1];\n        image.data[i + 2] = imageData.data[i + 2];\n        image.data[i + 3] = imageData.data[i + 3];\n      }\n    }\n\n    return image;\n  };\n  /**\n   * detect - prediction for each WebCam frame\n   * @param {TensorFlowNet} net \n   */\n\n\n  const detect = async net => {\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      const videoTrack = webcamRef.current.stream.getVideoTracks()[0];\n      const video = webcamRef.current.video;\n      backVideoRef.current.width = video.videoWidth;\n      backVideoRef.current.height = video.videoHeight;\n      videoTrack.applyConstraints(videoConstraints);\n      const videoHeight = video.videoHeight;\n      const videoWidth = video.videoWidth;\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n      const outStride = 16;\n      const segThreshold = 0.5;\n      const cv = document.createElement('canvas');\n      cv.style.width = videoWidth;\n      cv.style.height = videoHeight;\n      cv.width = videoWidth;\n      cv.height = videoHeight;\n      const ctx = cv.getContext('2d');\n      ctx.drawImage(video, 0, 0, cv.width, cv.height);\n      const imageData = ctx.getImageData(0, 0, cv.width, cv.height);\n      const person = await net.segmentPersonParts(video, outStride, segThreshold);\n      const coloredPart = bodyPix.toColoredPartMask(person);\n      const back = backMask(imageData, coloredPart);\n\n      if (!back) {\n        console.log('no segmentation data');\n        return;\n      } else {\n        const ctx2 = canvasRef.current.getContext('2d');\n        ctx2.putImageData(back, 0, 0);\n      }\n    }\n  };\n  /**\n   * stop - Stop each streaming Track and sets render as false to stop detection\n   */\n\n\n  const stopDetection = () => {\n    render = false;\n  };\n\n  const stop = () => {\n    render = false;\n    backVideoRef.current.pause();\n    const tracks = webcamRef.current.stream.getTracks(); // console.log(tracks);\n\n    for (const track of tracks) {\n      track.stop();\n    }\n  };\n\n  const checkVideoTrack = () => {};\n\n  const record = () => {\n    const triggerView = triggerRef.current;\n    console.log(triggerRef.current.querySelector('h1'));\n\n    if (!recording) {\n      console.log('animation init');\n      let count = 3;\n      console.log(videoStyles.trigger_anim);\n      const int = setInterval(() => {\n        triggerView.querySelector('h1').className = '';\n\n        if (count === 0) {\n          console.log('stop trigger');\n          triggerView.style.cssText = '{visibility: hidden !important;}';\n          triggerView.querySelector('h1').className = '';\n          clearInterval(int);\n        }\n\n        triggerView.querySelector('h1').innerHTML = count + '!';\n        triggerView.querySelector('h1').classList.add(videoStyles.trigger_anim);\n        triggerView.style.visibility = 'visible';\n        count--;\n      }, 1600);\n    } else {}\n  }; // runBodySegment();\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: videoStyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: videoStyles.loading,\n    ref: loadingRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: videoStyles.trigger,\n    ref: triggerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, \"3!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: videoStyles.back,\n    onClick: () => {\n      back();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: videoStyles.toolsMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: videoStyles.save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    className: videoStyles.back_remove,\n    onClick: () => {\n      runBodySegment();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    className: videoStyles.other,\n    onClick: () => {\n      checkVideoTrack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(Webcam, {\n    ref: webcamRef,\n    className: videoStyles.webcam,\n    videoConstraints: videoConstraints,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    className: videoStyles.render_canvas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    ref: backVideoRef,\n    className: videoStyles.back_video,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: backVideo,\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: videoStyles.controls,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: videoStyles.deleteBtn,\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: videoStyles.recordBtn,\n    onClick: () => {\n      record();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: videoStyles.galleryBtn,\n    onClick: () => {},\n    ref: galleryRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 6\n    }\n  })));\n}\n\nclass MainView extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: menuStyles.menu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: menuStyles.gallery,\n      onClick: () => {\n        this.gallery();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: menuStyles.creator,\n      onClick: () => {\n        this.creator();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: menuStyles.user,\n      onClick: () => {\n        this.user();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  gallery() {}\n\n  creator() {\n    ReactDOM.render( /*#__PURE__*/React.createElement(VideoFrame, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 5\n      }\n    }), root);\n  }\n\n  user() {}\n\n}\n\nfunction App() {\n  const renderVideoCapture = () => {\n    React.render( /*#__PURE__*/React.createElement(VideoFrame, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 5\n      }\n    }), root);\n  };\n\n  return /*#__PURE__*/React.createElement(MainView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 2\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dan/Documents/sol/sol/src/App.js"],"names":["React","useRef","ReactDOM","tf","bodyPix","Webcam","menuStyles","videoStyles","backVideo","root","document","getElementById","VideoFrame","loadingRef","triggerRef","galleryRef","webcamRef","canvasRef","backVideoRef","render","recording","currentMask","dimensions","window","innerWidth","innerHeight","cropedDimensions","console","log","videoConstraints","width","height","facingMode","back","stop","runBodySegment","current","style","visibility","net","load","play","interval","setInterval","filter","detect","clearInterval","backMask","image","mask","cv","createElement","imageData","videoW","videoWidth","videoH","videoHeight","ctx","getContext","drawImage","getImageData","err","i","data","length","vector","video","readyState","videoTrack","stream","getVideoTracks","applyConstraints","outStride","segThreshold","person","segmentPersonParts","coloredPart","toColoredPartMask","ctx2","putImageData","stopDetection","pause","tracks","getTracks","track","checkVideoTrack","record","triggerView","querySelector","count","trigger_anim","int","className","cssText","innerHTML","classList","add","container","loading","trigger","toolsMenu","save","back_remove","other","webcam","render_canvas","back_video","controls","deleteBtn","recordBtn","galleryBtn","MainView","Component","menu","gallery","creator","user","App","renderVideoCapture"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport ReactDOM from 'react-dom'; \nimport * as tf from \"@tensorflow/tfjs\";\nimport * as bodyPix from \"@tensorflow-models/body-pix\";\nimport Webcam from \"react-webcam\";\nimport './App.css';\nimport menuStyles from './Menu.module.css';\nimport videoStyles from './VideoFrame.module.css';\nimport backVideo from './airport.mp4';\n\nconst root = document.getElementById('root');\n\nfunction VideoFrame () {\n\tconst loadingRef = useRef(null);\n\tconst triggerRef = useRef(null);\n\tconst galleryRef = useRef(null);\n\tconst webcamRef = useRef(null);\n\tconst canvasRef = useRef(null);\n\tconst backVideoRef = useRef(null);\n\tlet render = false;\n\tlet recording = false;\n\tlet currentMask;\n\n\tconst dimensions = [window.innerWidth, window.innerHeight];\n\tlet cropedDimensions;\n\tconsole.log(dimensions);\n\n\tconst videoConstraints = {\n\t\twidth: dimensions[0],\n\t\theight: dimensions[1],\n\t\tfacingMode: \"user\"\n\t}\n\n\t// Navigation\n\n\tconst back = () => {\n\t\tstop();\n\t\tReactDOM.render(\n\t\t\t(\n\t\t\t\t<MainView></MainView>\n\t\t\t),\n\t\t\troot\n\t\t);\n\t}\n\t/**\n\t * runBodySegment - startpoint for the background extraction\n\t */\n\tconst runBodySegment = async () => {\n\t\tloadingRef.current.style.visibility = 'visible';\n\t\trender = true;\n\t\tconst net = await bodyPix.load();\n\t\tif (backVideoRef.current) {\n\t\t\tbackVideoRef.current.play();\n\t\t}\n\t\tconst interval = setInterval(() => {\n\t\t\tif (render) {\n\t\t\t\tloadingRef.current.style.visibility = 'hidden';\n\t\t\t\tgalleryRef.current.style.filter = 'opacity(1)';\n\t\t\t\tdetect(net);\n\t\t\t} else {\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t}, 70);\n\t}\n\t/**\n\t * backMask - utility to apply the mask and compose the image using the video background\n\t * @param {ImageData} image \n\t * @param {ImageData} mask \n\t * @returns {ImageData} image - after the mask is applied\n\t */\n\tconst backMask = (image, mask) => {\n\t\t// console.log(image, mask, backVideoRef.current);\n\t\tconst cv = document.createElement('canvas');\n\t\tlet imageData;\n\t\ttry {\n\t\t\tconst videoW = backVideoRef.current.videoWidth;\n\t\t\tconst videoH = backVideoRef.current.videoHeight;\n\t\t\tcv.style.width = image.height * (videoW / videoH);\n\t\t\tcv.style.height = image.height;\n\t\t\tcv.width = image.height * (videoW / videoH);;\n\t\t\tcv.height = image.height;\n\t\t\tconst ctx = cv.getContext('2d');\n\t\t\tctx.drawImage(backVideoRef.current, 0, 0, cv.width, cv.height);\n\t\t\timageData = ctx.getImageData(0, 0, image.width, image.height);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\treturn null;\n\t\t}\n\t\t// console.log(image, mask, imageData);\n\t\tfor (let i = 0; i < image.data.length; i+=4) {\n\t\t\tconst vector = [\n\t\t\t\tmask.data[i],\n\t\t\t\tmask.data[i + 1],\n\t\t\t\tmask.data[i + 2],\n\t\t\t\tmask.data[i + 3],\n\t\t\t]\n\t\t\tif (\n\t\t\t\tvector[0] === 255 &&\n\t\t\t\tvector[1] === 255 &&\n\t\t\t\tvector[2] === 255\n\t\t\t\t) {\n\t\t\t\t\timage.data[i] = imageData.data[i];\n\t\t\t\t\timage.data[i + 1] = imageData.data[i + 1];\n\t\t\t\t\timage.data[i + 2] = imageData.data[i + 2];\n\t\t\t\t\timage.data[i + 3] = imageData.data[i + 3];\n\t\t\t}\n\t\t}\n\t\treturn image;\n\t}\n\t/**\n\t * detect - prediction for each WebCam frame\n\t * @param {TensorFlowNet} net \n\t */\n\tconst detect = async (net) => {\n\t\tif (\n\t\t\ttypeof webcamRef.current !== \"undefined\" &&\n\t\t\twebcamRef.current !== null &&\n\t\t\twebcamRef.current.video.readyState === 4\n\t\t\t) {\n\t\t\t\tconst videoTrack = webcamRef.current.stream.getVideoTracks()[0];\n\t\t\t\tconst video = webcamRef.current.video;\n\t\t\t\tbackVideoRef.current.width = video.videoWidth;\n\t\t\t\tbackVideoRef.current.height = video.videoHeight;\n\t\t\t\tvideoTrack.applyConstraints(videoConstraints);\n\t\t\t\tconst videoHeight = video.videoHeight;\n\t\t\t\tconst videoWidth = video.videoWidth;\n\t\t\t\twebcamRef.current.video.width = videoWidth;\n\t\t\t\twebcamRef.current.video.height = videoHeight;\n\t\t\t\tcanvasRef.current.width = videoWidth;\n\t\t\t\tcanvasRef.current.height = videoHeight;\n\t\t\t\tconst outStride = 16;\n\t\t\t\tconst segThreshold = 0.5;\n\t\t\t\tconst cv = document.createElement('canvas');\n\t\t\t\tcv.style.width = videoWidth;\n\t\t\t\tcv.style.height = videoHeight;\n\t\t\t\tcv.width = videoWidth;\n\t\t\t\tcv.height = videoHeight;\n\t\t\t\tconst ctx = cv.getContext('2d');\n\t\t\t\tctx.drawImage(video, 0, 0, cv.width, cv.height);\n\t\t\t\tconst imageData = ctx.getImageData(0, 0, cv.width, cv.height);\n\t\t\t\tconst person = await net.segmentPersonParts(video, outStride, segThreshold);\n\t\t\t\tconst coloredPart = bodyPix.toColoredPartMask(person);\n\t\t\t\tconst back = backMask(imageData, coloredPart);\n\t\t\t\tif (!back) {\n\t\t\t\t\tconsole.log('no segmentation data')\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tconst ctx2 = canvasRef.current.getContext('2d');\n\t\t\t\t\tctx2.putImageData(back, 0, 0);\n\t\t\t\t}\n\t\t\t}\n\t}\n\t/**\n\t * stop - Stop each streaming Track and sets render as false to stop detection\n\t */\n\tconst stopDetection = () => {\n\t\trender = false;\n\t}\n\tconst stop = () => {\n\t\trender = false;\n\t\tbackVideoRef.current.pause();\n\t\tconst tracks = webcamRef.current.stream.getTracks();\n\t\t// console.log(tracks);\n\t\tfor (const track of tracks) {\n\t\t\ttrack.stop();\n\t\t}\n\t}\n\tconst checkVideoTrack = () => {\n\t}\n\tconst record = () => {\n\t\tconst triggerView = triggerRef.current;\n\t\tconsole.log(triggerRef.current.querySelector('h1'));\n\t\tif (!recording) {\n\t\t\tconsole.log('animation init');\n\t\t\tlet count = 3;\n\t\t\tconsole.log(videoStyles.trigger_anim);\n\t\t\tconst int = setInterval( ()=>{\n\t\t\t\ttriggerView.querySelector('h1').className = '';\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tconsole.log('stop trigger');\n\t\t\t\t\ttriggerView.style.cssText = '{visibility: hidden !important;}';\n\t\t\t\t\ttriggerView.querySelector('h1').className = '';\n\t\t\t\t\tclearInterval(int);\n\t\t\t\t}\n\t\t\t\ttriggerView.querySelector('h1').innerHTML = count + '!';\n\t\t\t\ttriggerView.querySelector('h1').classList.add(videoStyles.trigger_anim);\n\t\t\t\ttriggerView.style.visibility = 'visible';\n\t\t\t\tcount--;\n\t\t\t}, 1600);\n\t\t} else {\n\n\t\t}\n\t}\n\t// runBodySegment();\n\treturn (\n\t\t\t<div className={ videoStyles.container }>\n\t\t\t<div className={ videoStyles.loading } ref={loadingRef}>\n\t\t\t\t<h1></h1>\n\t\t\t\t<h2>Loading...</h2>\n\t\t\t</div>\n\t\t\t<div className={ videoStyles.trigger } ref={triggerRef}>\n\t\t\t\t<h1>3!</h1>\n\t\t\t</div>\n\t\t\t<div className={ videoStyles.back } onClick={() => { back() }}></div>\n\t\t\t\t<div className={ videoStyles.toolsMenu }>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li className={ videoStyles.save }></li>\n\t\t\t\t\t\t<li className={ videoStyles.back_remove } onClick={ ()=>{runBodySegment()} }></li>\n\t\t\t\t\t\t<li className={ videoStyles.other } onClick={ ()=> { checkVideoTrack()} }></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<Webcam ref={webcamRef} className={ videoStyles.webcam }\n\t\t\t\t\tvideoConstraints={ videoConstraints }\n\t\t\t\t\t/>\n\t\t\t\t<canvas ref={canvasRef}\n\t\t\t\t\tclassName={ videoStyles.render_canvas }></canvas>\n\t\t\t\t<video \n\t\t\t\t\tref={ backVideoRef } className={ videoStyles.back_video }\n\t\t\t\t\t>\n\t\t\t\t\t<source src={ backVideo } type=\"video/mp4\"/>\n\t\t\t\t</video>\n\t\t\t\t<div className={ videoStyles.controls }>\n\t\t\t\t\t<button className={ videoStyles.deleteBtn } onClick={()=> {} }></button>\n\t\t\t\t\t<button className={ videoStyles.recordBtn } onClick={()=> { record() }}></button>\n\t\t\t\t\t<button className={ videoStyles.galleryBtn } onClick={()=> {}} ref={galleryRef}></button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n}\n\nclass MainView extends React.Component {\n\trender () {\n\t\treturn (\n\t\t\t<div className={ menuStyles.menu }>\n\t\t\t\t<button className={ menuStyles.gallery } onClick={()=>{this.gallery()}}></button>\n\t\t\t\t<button className={ menuStyles.creator } onClick={()=>{this.creator()}}></button>\n\t\t\t\t<button className={ menuStyles.user } onClick={()=>{this.user()}}></button>\n\t\t\t</div>\n\t\t);\n\t}\n\tgallery () {\n\n\t}\n\tcreator () {\n\t\tReactDOM.render(\n\t\t\t(\n\t\t\t\t<VideoFrame></VideoFrame>\n\t\t\t),\n\t\t\troot\n\t\t);\n\t}\n\tuser () {\n\n\t}\n}\n\nfunction App() {\n\tconst renderVideoCapture = () => {\n\t\tReact.render(\n\t\t\t(\n\t\t\t\t<VideoFrame>\n\t\t\t\t</VideoFrame>\n\t\t\t),\n\t\t\troot\n\t\t)\n\t};\n  return (\n\t<MainView></MainView>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}